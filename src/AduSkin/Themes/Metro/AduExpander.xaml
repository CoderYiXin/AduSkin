<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:AduSkin="clr-namespace:AduSkin.Controls.Metro"
    xmlns:AduAttach="clr-namespace:AduSkin.Controls.Attach">
   <ResourceDictionary.MergedDictionaries>
      <ResourceDictionary Source="/AduSkin;component/Themes/Theme.xaml"/>
      <ResourceDictionary Source="/AduSkin;component/Themes/Opacity.xaml"/>
   </ResourceDictionary.MergedDictionaries>

   <Style x:Key="DownHeader" TargetType="{x:Type ToggleButton}">
      <Setter Property="Height" Value="30"/>
      <Setter Property="AduAttach:PathDataAttach.Width" Value="0"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border>
                  <Grid Background="{DynamicResource NormalTransparentBrush}" SnapsToDevicePixels="False">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="35" />
                     </Grid.ColumnDefinitions>
                     <Path x:Name="icon" Grid.Column="0" 
                        Margin="{TemplateBinding AduAttach:PathDataAttach.Margin}"
                        Width="{TemplateBinding AduAttach:PathDataAttach.Width}" 
                        HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Data="{TemplateBinding AduAttach:PathDataAttach.PathData}" 
                        Fill="{TemplateBinding Foreground}" 
                        SnapsToDevicePixels="False" Stretch="Uniform"/>
                     <ContentPresenter Grid.Column="1"
                        Margin="2,0,0,0"
                        VerticalAlignment="Center"
                        Content="{TemplateBinding Content}"
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="True"/>
                     <Path x:Name="arrow" Grid.Column="2"
                        Width="6" Height="10"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{DynamicResource Icon_RightArrow}"
                        Fill="{TemplateBinding Foreground}"
                        Stretch="Uniform"
                        SnapsToDevicePixels="False"/>
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="arrow" Property="Width" Value="10" />
                     <Setter TargetName="arrow" Property="Height" Value="6" />
                     <Setter TargetName="arrow" Property="Data" Value="{DynamicResource Icon_DownArrow}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource MouseOverOpacity}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource PressedOpacity}" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="RightHeader" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border Padding="{TemplateBinding Padding}">
                  <Grid Background="{DynamicResource NormalTransparentBrush}" SnapsToDevicePixels="False">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="19" />
                        <RowDefinition Height="*" />
                     </Grid.RowDefinitions>
                     <Grid>
                        <Grid.LayoutTransform>
                           <TransformGroup>
                              <RotateTransform Angle="-90" />
                           </TransformGroup>
                        </Grid.LayoutTransform>
                        <Ellipse
                        x:Name="circle"
                        Width="19"
                        Height="19"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="White"
                        Stroke="#FF333333" />
                        <Path
                        x:Name="arrow"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="M1,1.5L4.5,5 8,1.5"
                        SnapsToDevicePixels="False"
                        Stroke="#FF333333"
                        StrokeThickness="2" />
                     </Grid>
                     <ContentPresenter
                     Grid.Row="1"
                     Margin="0,4,0,0"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Top"
                     Content="{TemplateBinding Content}"
                     ContentStringFormat="{TemplateBinding ContentStringFormat}"
                     ContentTemplate="{TemplateBinding ContentTemplate}"
                     RecognizesAccessKey="True"
                     SnapsToDevicePixels="True" />
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="arrow" Property="Data" Value="M1,4.5L4.5,1 8,4.5" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="circle" Property="Stroke" Value="#FF5593FF" />
                     <Setter TargetName="circle" Property="Fill" Value="{DynamicResource NormalWhite}" />
                     <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="circle" Property="Stroke" Value="#FF3C77DD" />
                     <Setter TargetName="circle" Property="StrokeThickness" Value="1.5" />
                     <Setter TargetName="circle" Property="Fill" Value="#FFD9ECFF" />
                     <Setter TargetName="arrow" Property="Stroke" Value="Black" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter TargetName="circle" Property="Stroke" Value="#FFBCBCBC" />
                     <Setter TargetName="circle" Property="Fill" Value="#FFE6E6E6" />
                     <Setter TargetName="arrow" Property="Stroke" Value="#FF707070" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="UpHeader" TargetType="{x:Type ToggleButton}">
      <Setter Property="Height" Value="30"/>
      <Setter Property="AduAttach:PathDataAttach.Width" Value="0"/>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border>
                  <Grid Background="{DynamicResource NormalTransparentBrush}" SnapsToDevicePixels="False">
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="35" />
                     </Grid.ColumnDefinitions>
                     <Path x:Name="icon" Grid.Column="0" 
                     Margin="{TemplateBinding AduAttach:PathDataAttach.Margin}"
                     Width="{TemplateBinding AduAttach:PathDataAttach.Width}" 
                     HorizontalAlignment="Center" VerticalAlignment="Center" 
                     Data="{TemplateBinding AduAttach:PathDataAttach.PathData}" 
                     Fill="{TemplateBinding Foreground}" 
                     SnapsToDevicePixels="False" Stretch="Uniform"/>
                     <ContentPresenter Grid.Column="1"
                     Margin="2,0,0,0"
                     VerticalAlignment="Center"
                     Content="{TemplateBinding Content}"
                     ContentStringFormat="{TemplateBinding ContentStringFormat}"
                     ContentTemplate="{TemplateBinding ContentTemplate}"
                     RecognizesAccessKey="True"
                     SnapsToDevicePixels="True"/>
                     <Path x:Name="arrow" Grid.Column="2"
                     Width="6" Height="10"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Data="{DynamicResource Icon_RightArrow}"
                     Fill="{TemplateBinding Foreground}"
                     Stretch="Uniform"
                     SnapsToDevicePixels="False"/>
                  </Grid>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="arrow" Property="Width" Value="10" />
                     <Setter TargetName="arrow" Property="Height" Value="6" />
                     <Setter TargetName="arrow" Property="Data" Value="{DynamicResource Icon_UpArrow}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource MouseOverOpacity}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource PressedOpacity}" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
 
   <Style x:Key="LeftHeader" TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Grid Background="{DynamicResource NormalTransparentBrush}" SnapsToDevicePixels="False">
                  <Grid.RowDefinitions>
                     <RowDefinition Height="20" />
                     <RowDefinition Height="*" />
                  </Grid.RowDefinitions>
                  <Path x:Name="arrow" 
                   Width="6" Height="10"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Center"
                   Data="{DynamicResource Icon_LeftArrow}"
                   Fill="{TemplateBinding Foreground}"
                   Stretch="Uniform"
                   SnapsToDevicePixels="False"/>
                  <ContentPresenter Grid.Row="1" VerticalAlignment="Stretch"
                     Margin="2,0,0,0"
                     Content="{TemplateBinding Content}"
                     ContentStringFormat="{TemplateBinding ContentStringFormat}"
                     ContentTemplate="{TemplateBinding ContentTemplate}"
                     RecognizesAccessKey="True"
                     SnapsToDevicePixels="True"/>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsChecked" Value="True">
                     <Setter TargetName="arrow" Property="Width" Value="10" />
                     <Setter TargetName="arrow" Property="Height" Value="6" />
                     <Setter TargetName="arrow" Property="Data" Value="{DynamicResource Icon_DownArrow}" />
                  </Trigger>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource MouseOverOpacity}" />
                  </Trigger>
                  <Trigger Property="IsPressed" Value="True">
                     <Setter TargetName="arrow" Property="Opacity" Value="{DynamicResource PressedOpacity}" />
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type AduSkin:AduExpander}">
      <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource NormalForeground}"/>
      <Setter Property="Background" Value="{DynamicResource NormalBackground}" />
      <Setter Property="IsExpanded" Value="False"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Setter Property="ExpandDirection" Value="Down"/>
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type AduSkin:AduExpander}">
               <Border SnapsToDevicePixels="True" >
                  <DockPanel x:Name="PART_Root">
                     <ToggleButton x:Name="HeaderSite"
                        FocusVisualStyle="{x:Null}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        DockPanel.Dock="Top"
                        AduAttach:PathDataAttach.PathData="{TemplateBinding AduAttach:PathDataAttach.PathData}"
                        AduAttach:PathDataAttach.Width="{TemplateBinding AduAttach:PathDataAttach.Width}"
                        AduAttach:PathDataAttach.Margin="{TemplateBinding AduAttach:PathDataAttach.Margin}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource DownHeader}"
                        IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                     <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom"
                        Content="{TemplateBinding Content}"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        Focusable="False"
                        Visibility="Collapsed"/>
                  </DockPanel>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="True">
                     <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Right">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource RightHeader}"/>
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Up">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource UpHeader}"/>
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Left">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource LeftHeader}"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style TargetType="{x:Type AduSkin:AduNoExpander}">
      <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
      <Setter Property="Foreground" Value="{DynamicResource NormalForeground}"/>
      <Setter Property="Background" Value="{DynamicResource NormalBackground}" />
      <Setter Property="IsExpanded" Value="False"/>
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Setter Property="ExpandDirection" Value="Down"/>
      <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type AduSkin:AduNoExpander}">
               <Border SnapsToDevicePixels="True" >
                  <DockPanel x:Name="PART_Root">
                     <ToggleButton x:Name="HeaderSite"
                        FocusVisualStyle="{x:Null}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Header}"
                        ContentTemplate="{TemplateBinding HeaderTemplate}"
                        DockPanel.Dock="Top"
                        AduAttach:PathDataAttach.PathData="{TemplateBinding AduAttach:PathDataAttach.PathData}"
                        AduAttach:PathDataAttach.Width="{TemplateBinding AduAttach:PathDataAttach.Width}"
                        AduAttach:PathDataAttach.Margin="{TemplateBinding AduAttach:PathDataAttach.Margin}"
                        FontFamily="{TemplateBinding FontFamily}"
                        FontSize="{TemplateBinding FontSize}"
                        FontStretch="{TemplateBinding FontStretch}"
                        FontStyle="{TemplateBinding FontStyle}"
                        FontWeight="{TemplateBinding FontWeight}"
                        Foreground="{TemplateBinding Foreground}"
                        Style="{StaticResource DownHeader}"
                        IsChecked="True"/>
                     <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom"
                        Content="{TemplateBinding Content}"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                        ContentTemplate="{TemplateBinding ContentTemplate}" 
                        Focusable="False"
                        Visibility="Collapsed"/>
                  </DockPanel>
               </Border>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsExpanded" Value="True">
                     <Setter TargetName="ExpandSite" Property="Visibility" Value="Visible" />
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Right">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource RightHeader}"/>
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Up">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource UpHeader}"/>
                  </Trigger>
                  <Trigger Property="ExpandDirection" Value="Left">
                     <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
                     <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
                     <Setter TargetName="HeaderSite" Property="Style" Value="{StaticResource LeftHeader}"/>
                  </Trigger>
                  <Trigger Property="IsEnabled" Value="False">
                     <Setter Property="Opacity" Value="{DynamicResource DisableOpacity}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>